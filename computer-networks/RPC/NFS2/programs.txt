/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */

#include "nfs.h"

int *
nfs_write_1_svc(file_args_w *argp, struct svc_req *rqstp)
{
	static int  result;
	printf("A Write request from client for file : %s\n", argp->filename);
	int fd = open(argp->filename, O_WRONLY);
		if(lseek(fd, argp->offset, SEEK_SET)<0){
			result = -1;
		}
		result = write(fd, argp->buffer, argp->size);
		close(fd);

	return &result;
}

bufwrap *
nfs_read_1_svc(file_args_r *argp, struct svc_req *rqstp)
{
	static bufwrap  result;

	/*
	 * insert server code here
	 */
	struct stat sb;
	printf("read request %s %d\n", argp->filename, (int)strlen(argp->filename));
	if(access(argp->filename, F_OK|R_OK) < 0) {
		result.size = -1;
		return &result;
	}
	stat(argp->filename, &sb);
	if(sb.st_mode && S_ISREG(sb.st_mode)) {
		int fd = open(argp->filename, O_RDONLY);
		if(lseek(fd, argp->offset, SEEK_SET)<0){
			result.size = -1;
			return &result;
		}
		result.size = read(fd, result.buffer, argp->size);
		close(fd);
	} else {
		result.size = -1;
	}
	return &result;

}







	while(1)
	{
		int k;
		printf("Press 1 to read and 2 to write\n");
		scanf("%d",&k);
		if(k==1)
		{
			printf("Enter filename: ");
			scanf("%s",nfs_read_1_arg.filename);
			scanf("%d",nfs_read_1_arg.offset);
			scanf("%d",nfs_read_1_arg.size);
			result_2 = nfs_read_1(&nfs_read_1_arg, clnt);
			if (result_2 == (bufwrap *) NULL) {
			clnt_perror (clnt, "call failed");
			}
			printf("Read %d bytes\n", result_2->size);
			printf("%s\n", result_2->buffer);
		}
	}